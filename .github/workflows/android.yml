name: Build and Release APK

on:
  push:
    branches:
      - main  # O workflow será acionado ao fazer push na branch 'main'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Passo para fazer checkout do código
      - name: Checkout code
        uses: actions/checkout@v3

      # Passo para configurar o JDK
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      # Passo para cache de dependências do Gradle
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Adicionar permissão de execução ao gradlew
      - name: Give execute permission to gradlew
        run: chmod +x ./gradlew

      # Passo para configurar o keystore a partir dos segredos
      - name: Set up keystore
        run: |
          echo "$KEYSTORE_FILE" | base64 --decode > ./app/keystore/prismakeystore.jks
        env:
          KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}  # A variável de segredo contendo o keystore codificado em base64

      # Passo para compilar e assinar o APK (assembleRelease)
      - name: Build and sign APK
        run: ./gradlew assembleRelease -Psigning.keyAlias=${{ secrets.KEY_ALIAS }} -Psigning.keyPassword=${{ secrets.KEY_PASSWORD }} -Psigning.storeFile=./app/keystore/prismakeystore.jks -Psigning.storePassword=${{ secrets.KEYSTORE_PASSWORD }}

      # Passo para criar a release no GitHub
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}  # Definindo o nome da tag da release
          release_name: "Release v${{ github.run_number }}"
          draft: false
          prerelease: false

      # Passo para fazer upload do APK assinado para a release
      - name: Upload APK to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/app-release.apk  # Caminho correto para o APK assinado
          asset_name: app-release.apk  # Nome do arquivo
          asset_content_type: application/vnd.android.package-archive
